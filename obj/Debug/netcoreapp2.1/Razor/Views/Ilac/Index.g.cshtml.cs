#pragma checksum "C:\Users\esma\Desktop\webeczane\Views\Ilac\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "91955e81b9d581892971ddb3ac50f068257c4161"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Ilac_Index), @"mvc.1.0.view", @"/Views/Ilac/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Ilac/Index.cshtml", typeof(AspNetCore.Views_Ilac_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\esma\Desktop\webeczane\Views\_ViewImports.cshtml"
using webeczane;

#line default
#line hidden
#line 2 "C:\Users\esma\Desktop\webeczane\Views\_ViewImports.cshtml"
using webeczane.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"91955e81b9d581892971ddb3ac50f068257c4161", @"/Views/Ilac/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"99bd0a4f10527bf755e7e9e52a203c12a21bdd67", @"/Views/_ViewImports.cshtml")]
    public class Views_Ilac_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("form"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 1979, true);
            WriteLiteral(@"<div class=""container-fluid"">
    <div class=""row bg-title"">
        <div class=""col-lg-3 col-md-4 col-sm-4 col-xs-12"">
            <h4 class=""page-title"">Fatura Yönetimi</h4>
        </div>
        <div class=""col-lg-9 col-sm-8 col-md-8 col-xs-12"">
            <a onclick=""newItem()"" class=""btn btn-danger pull-right m-l-20 waves-effect waves-light"">
                Ilac Ekle
            </a>
            <ol class=""breadcrumb"">
                <li><a href=""#"">Web Eczane</a></li>
                <li class=""active"">Ilac Yönetimi</li>
            </ol>
        </div>
        <!-- /.col-lg-12 -->
    </div>
    <div class=""row"">
        <div class=""col-md-12"">
            <div id=""alertDiv""></div>
            <div class=""white-box"">

                <div class=""table-responsive"">
                    <table class=""table"">
                        <thead>
                            <tr>
                                <th>#</th>
                                <th>Adi</th>
                ");
            WriteLiteral(@"                <th>Fiyat</th>
                               
                                <th>Kategoriid</th>
                                <th>Firma</th>
                                <th>Faturaid</th>
                                <th>İşlemler</th>
                            </tr>
                        </thead>
                        <tbody id=""tbody"">
                        </tbody>
                    </table>
                </div>

            </div>
        </div>
    </div>
</div>

<div id=""myModal"" class=""modal fade"" role=""dialog"">
    <div class=""modal-dialog"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <button type=""button"" class=""close"" data-dismiss=""modal"">&times;</button>
                <h4 class=""modal-title"">Ilac</h4>
            </div>
            <div class=""modal-body"">
                <div id=""alertDivModal""></div>
                ");
            EndContext();
            BeginContext(1979, 1289, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "5f17a360e1df46e5a8efbf7d5afd1bf6", async() => {
                BeginContext(1995, 1266, true);
                WriteLiteral(@"
                    <input hidden name=""Id"">
                    <div class=""form-group"">
                        <label for=""tutar"">Adi:</label>
                        <input type=""text"" name=""Adi"" id=""adi"" placeholder=""Adi"" class=""form-control"">
                    </div>
                    <div class=""form-group"">
                        <label for=""pwd"">Firma:</label>
                        <input type=""text"" class=""form-control"" id=""firma"" name=""firma"">
                    </div>
                    <div class=""form-group"">
                            <label for=""pwd"">Fiyat:</label>
                            <input type=""text"" class=""form-control"" id=""fiyat"" name=""fiyat"">
                        </div>
                   
                    <div class=""form-group"">
                        <label for=""pwd"">Kategori</label>
                        <select type=""text"" class=""form-control"" id=""Kategoriid"" name=""KategoriId""></select>
                    </div>
                    <di");
                WriteLiteral("v class=\"form-group\">\r\n                            <label for=\"pwd\">Fatura</label>\r\n                            <select type=\"text\" class=\"form-control\" id=\"Faturaid\" name=\"FaturaId\"></select>\r\n                        </div>\r\n                ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(3268, 316, true);
            WriteLiteral(@"
            </div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-danger"" onclick=""save()"">Kaydet</button>
                <button type=""button"" class=""btn btn-default"" data-dismiss=""modal"">Kapat</button>
            </div>
        </div>

    </div>
</div>

");
            EndContext();
            DefineSection("Scripts", async() => {
                BeginContext(3601, 3576, true);
                WriteLiteral(@"
<script>
    $(() => {
        listele()
        kategoriSelect()
        faturaSelect()
    })

    kategoriSelect = () => $.getJSON('/kategori/listesi', (kategoriler) =>
     kategoriler.liste.map(kategori => $('#Kategoriid').append('<option value=""' + kategori.id + '"">' + kategori.adi + '</option>')))
     faturaSelect = () => $.getJSON('/fatura/listesi', (faturalar) =>
     faturalar.liste.map(fatura => $('#Faturaid').append('<option value=""' + fatura.id + '"">' + fatura.tutar + '</option>')))


    save = () => {
        $.post('/ilac/kaydet', { item: $('#form').serializeObject() }, (sonuc) => {
            if (sonuc.basarili) {
                listele()
                $('#myModal').modal('hide')
                
            }
            else {
                basarizMesaji('alertDivModal')
            }
        })
    }
    var liste;
    listele = () => {
        $('#tbody').empty()
        $.getJSON('/ilac/listesi', (data) => {
            if (data.basarili) {
        ");
                WriteLiteral(@"        liste = data.liste
                data.liste.map(item => $('#tbody').append(`
        <tr>
            <td>${item.id}</td>
            <td>${item.adi}</td>
            <td>${item.fiyat}</td>
            <td>${item.firma}</td>
            <td>${item.kategoriid}</td>

            <td>${item.faturaid}</td>
            <td>
                <button type=""buttton"" class=""btn btn-default"" onclick=""editItem(${item.id})""><i class=""fa fa-edit""></i></button>
                <button type=""buttton"" class=""btn btn-default"" onclick=""deleteItem(${item.id})""><i class=""fa fa-trash""></i></button>
                </td>
        </tr>
            `))
            } else {
                basarizMesaji('alertDiv')
            }
        })
    }
    newItem = () => {

        $('#alertDivModal').empty()
        $('[name=Id]').val(null)
        $('[name=Adi]').val(null)
        $('[name=Fiyat]').val(null)
        $('[name=Firma]').val(null)
        
        $('[name=Kategoriid]').val(null)
      ");
                WriteLiteral(@"  $('[name=Faturaid]').val(null)
        $('#myModal').modal('show')
    }

    editItem = (id) => {
        var item = liste.find(x => x.id === id)

        $('[name=Id]').val(item.id)
        $('[name=Adi]').val(item.adi)
        $('[name=Fiyat]').val(item.soyadi)
        $('[name=Firma]').val(item.soyadi)
        $('[name=Kategoriid]').val(item.soyadi)
      
        $('[name=Faturaid]').val(item.hastaneid)
        $('#myModal').modal('show')
    }

    deleteItem = (id) => swal({
        title: 'Sil?',
        text: ""Kayıdı Silmek İstediğinize Emin Misiniz!"",
        type: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, Sil!'
    }).then((result) => {
        if (result.value) {
            $.post('/ilac/sil', { Id: id }, (sonuc) => {
                if (sonuc.basarili) {
                    swal(
                        'Silindi!',
                        'Kayıt Silindi.',");
                WriteLiteral(@"
                        'success'
                    )
                    listele()
                }

                else
                    swal(
                        'Hata!',
                        'Sanırım Bir Şeyler Ters Gitti.',
                        'error'
                    )
            })
        }
    })

    basarizMesaji = (divName) => $('#' + divName).append('<div class=""alert alert-danger"">Başarısız! Sanırım Bir Şeyler Ters Gitti :(</div>')


</script>
");
                EndContext();
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
